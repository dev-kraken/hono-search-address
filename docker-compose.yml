services:
  search-app:
    container_name: search-app
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "${PORT}:${PORT}"
    environment:
      - NODE_ENV=${NODE_ENV}
      - PORT=${PORT}
      - LOG_LEVEL=${LOG_LEVEL}
      - DATABASE_URL=${DATABASE_URL}
    depends_on:
      search-db:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:${PORT}/health" ]
      interval: 30s
      timeout: 10s
      retries: 3

  search-db:
    container_name: search-db
    image: postgres:16-alpine
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER}" ]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

volumes:
  postgres_data:
    name: search_postgres_data